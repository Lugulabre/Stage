mat_1024_16384_mean$mean.adm.props, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
View(mat_1024_16384_mean)
df_stat =mat_1024_16384
max_gen =101
seq_ne = seq_1024_16384
lrow = length(names(summary(df_stat$Ne)))
lrow
df_mean = matrix(data = NA, nrow = lrow*max_gen, ncol = 62 )
df_mean = as.data.frame(df_mean)
cpt = 0
names(summary(df_stat$Ne))
ne = "1024"
df_tmp = df_stat[which(df_stat$Ne == ne),]
View(df_tmp)
row_min = cpt*max_gen+1
row_max = (cpt+1)*max_gen
row_min
row_max
df_mean[row_min:row_max, 1] = toString(ne)
View(df_mean)
cpt = cpt+1
#Passage en moyenne
data.frame.mean = function(df_stat, max_gen, seq_ne){
lrow = length(names(summary(df_stat$Ne)))
df_mean = matrix(data = NA, nrow = lrow*max_gen, ncol = 62 )
df_mean = as.data.frame(df_mean)
cpt = 0
for (ne in names(summary(df_stat$Ne))) {
df_tmp = df_stat[which(df_stat$Ne == ne),]
row_min = cpt*max_gen+1
row_max = (cpt+1)*max_gen
df_mean[row_min:row_max, 1] = toString(ne)
cpt = cpt+1
for (gen in 0:(max_gen-1) ) {
df_mean[row_min+gen, 2] = gen
vec_tmp = apply(df_tmp[which(df_tmp$Generation == gen), 4:63], 2, mean)
df_mean[row_min+gen, 3:62] = vec_tmp
}
}
colnames(df_mean) = colnames(df_stat)[-2]
df_mean$Ne = factor(as.factor(df_mean$Ne), levels = seq_ne )
return(df_mean)
}
mat_1024_16384_mean = data.frame.mean(mat_1024_16384, 101, seq_1024_16384)
View(mat_1024_16384_mean)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.adm.props, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.adm.props, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.het.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.het.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.het.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.het.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
seq_ne_ini = seq(50,100,2)
seq_ne_ini
seq_ne_fin = seq(100, 10000, 20)
seq_ne_fin
seq_ne_ini = seq(50,100,2)
seq_ne_fin = seq(100, 10000, 20)
for (ne_ini in seq_ne_ini) {
str_c("Ne", ne_ini, "-XXX")
}
str_c("Ne", ne_ini, "-XXX")
seq_ne_ini = seq(50,100,2)
seq_ne_fin = seq(100, 10000, 20)
outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-")
tail(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
a = seq_ne_fin = seq(100, 10000, 20)
a = outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-")
a = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
View(a)
as.data.frame.vector(a)
as.data.frame.vector(a)
apply(a, 2, rbind)
apply(a, 2, cbind)
as.vector(a)
as.data.frame.vector(a)
as.vector(t(a))
str_detect(seq_combi, "50-")
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(t(seq_combi))
str_detect(seq_combi, "50-")
seq_combi = as.vector(as.data.frame.vector(t(seq_combi)))
seq_combi = as.data.frame.vector(t(seq_combi))
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(t(seq_combi))
View(seq_combi)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.vector(as.data.frame.vector(t(seq_combi)))
View(seq_combi)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(t(seq_combi))[,1]
View(seq_combi)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(t(seq_combi))
View(seq_combi)
seq_combi = seq_combi[,1]
View(seq_combi)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(t(seq_combi))
typeof(seq_combi)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(unlist(seq_combi))
typeof(seq_combi)
View(seq_combi)
test = seq_combi[[1]]
typeof(test)
typeof(as.vector(test))
str_detect(test, "50-")
fruit <- c("apple", "banana", "pear", "pinapple")
str_detect(fruit, "a")
str_detect(fruit, "^a")
str_detect(test, "^50-")
which(str_detect(test, "^50-"))
test[which(str_detect(test, "^50-"))]
seq_ne_ini = seq(50,50,2)
seq_ne_ini
seq_ne_ini = seq(50,50,2)
seq_ne_fin = seq(100, 10000, 20)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(unlist(seq_combi))[[1]]
seq_combi
setwd("../new_methis_pop_increase_50000_snp/")
seq_ne_ini = seq(50,50,2)
seq_ne_fin = seq(100, 10000, 20)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
for (ne_ini in seq_ne_ini) {
dir_ne = str_c("Ne", ne_ini, "-XXX")
setwd(dir_ne)
motif_detect = str_c("^",ne_ini,"-")
vec_ne_tmp = seq_combi[which(str_detect(seq_combi, motif_detect))]
mat_tmp = data.frame.stat(seq_ne = vec_ne_tmp, max_gen = 101, max_simu = 1)
if (ne_ini == seq_ne_ini[1]) {
mat_pop_inc = mat_tmp
}else{
mat_pop_inc = rbind(mat_pop_inc, mat_tmp)
}
setwd("../")
}
setwd("../new_methis_pop_increase_50000_snp/")
dir_ne
dir_ne = str_c("Ne", ne_ini, "-XXX/")
setwd(dir_ne)
getwd()
setwd("../new_methis_pop_increase_50000_snp/")
getwd()
setwd("../new_methis_pop_increase_50000_snp/")
seq_ne_ini = seq(50,50,2)
seq_ne_fin = seq(100, 10000, 20)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(unlist(seq_combi))[[1]]
for (ne_ini in seq_ne_ini) {
dir_ne = str_c("Ne", ne_ini, "-XXX/")
setwd(dir_ne)
motif_detect = str_c("^",ne_ini,"-")
vec_ne_tmp = seq_combi[which(str_detect(seq_combi, motif_detect))]
mat_tmp = data.frame.stat(seq_ne = vec_ne_tmp, max_gen = 101, max_simu = 1)
if (ne_ini == seq_ne_ini[1]) {
mat_pop_inc = mat_tmp
}else{
mat_pop_inc = rbind(mat_pop_inc, mat_tmp)
}
setwd("../")
}
setwd("../new_methis_pop_increase_50000_snp/")
seq_ne_ini = seq(50,50,2)
seq_ne_fin = seq(100, 2400, 20)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(unlist(seq_combi))[[1]]
for (ne_ini in seq_ne_ini) {
dir_ne = str_c("Ne", ne_ini, "-XXX/")
setwd(dir_ne)
motif_detect = str_c("^",ne_ini,"-")
vec_ne_tmp = seq_combi[which(str_detect(seq_combi, motif_detect))]
mat_tmp = data.frame.stat(seq_ne = vec_ne_tmp, max_gen = 101, max_simu = 1)
if (ne_ini == seq_ne_ini[1]) {
mat_pop_inc = mat_tmp
}else{
mat_pop_inc = rbind(mat_pop_inc, mat_tmp)
}
setwd("../")
}
View(mat_pop_inc)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#Plot function
#Affichage d'une stat au cours des générations
plot_stat_gen = function(df, gen, stat, Ne, titre, ligne = FALSE){
p = ggplot(df, aes(x = gen, y = stat, color = Ne, show.legend = FALSE)) + ggtitle(titre)
if (ligne) {
p = p + geom_point(size = 0.1)+ geom_line()
}else{
#smooth de la courbe pour obtenir régression et tempérer variabilité due au TCL
p = p + geom_point(size = 0.1)+ geom_smooth()
}
print(p)
}
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#Plot function
#Affichage d'une stat au cours des générations
plot_stat_gen = function(df, gen, stat, Ne, titre, ligne = FALSE){
p = ggplot(df, aes(x = gen, y = stat, color = Ne, show.legend = FALSE)) + ggtitle(titre)
if (ligne) {
p = p + geom_point(size = 0.1)+ geom_line()
}else{
#smooth de la courbe pour obtenir régression et tempérer variabilité due au TCL
p = p + geom_point(size = 0.1)+ geom_smooth()
}
print(p)
}
#Plot function
#Affichage d'une stat au cours des générations
plot_stat_gen = function(df, gen, stat, Ne, titre, ligne = FALSE){
p = ggplot(df, aes(x = gen, y = stat, color = Ne), show.legend = FALSE) + ggtitle(titre)
if (ligne) {
p = p + geom_point(size = 0.1)+ geom_line()
}else{
#smooth de la courbe pour obtenir régression et tempérer variabilité due au TCL
p = p + geom_point(size = 0.1)+ geom_smooth()
}
print(p)
}
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales"
, TRUE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
TRUE)
#Plot function
#Affichage d'une stat au cours des générations
plot_stat_gen = function(df, gen, stat, Ne, titre, ligne = FALSE){
p = ggplot(df, aes(x = gen, y = stat, color = Ne), show.legend = FALSE) + ggtitle(titre)
if (ligne) {
p = p + geom_point(size = 0.1)+ geom_line()
}else{
#smooth de la courbe pour obtenir régression et tempérer variabilité due au TCL
p = p + geom_point(size = 0.1)+ geom_smooth()
}
p + theme(legend.position = "none")
print(p)
}
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales"
, TRUE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
TRUE)
#Plot function
#Affichage d'une stat au cours des générations
plot_stat_gen = function(df, gen, stat, Ne, titre, ligne = FALSE){
p = ggplot(df, aes(x = gen, y = stat, color = Ne)) + ggtitle(titre)
if (ligne) {
p = p + geom_point(size = 0.1, show.legend = FALSE)+ geom_line(show.legend = FALSE)
}else{
#smooth de la courbe pour obtenir régression et tempérer variabilité due au TCL
p = p + geom_point(size = 0.1, show.legend = FALSE)+ geom_smooth(show.legend = FALSE)
}
p + theme(legend.position = "none")
print(p)
}
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales"
, TRUE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
TRUE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales"
, TRUE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$mean.adm.props, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
TRUE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$mean.adm.props, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$mean.het.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.het.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$simu,
"Stat en fonction des générations\n selon différentes Ne initiales",
TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.het.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
#Plot function
#Affichage d'une stat au cours des générations
plot_stat_gen = function(df, gen, stat, Ne, titre, ligne = FALSE, legd = TRUE){
p = ggplot(df, aes(x = gen, y = stat, color = Ne)) + ggtitle(titre)
if (ligne) {
p = p + geom_point(size = 0.1, show.legend = legd)+ geom_line(show.legend = legd)
}else{
#smooth de la courbe pour obtenir régression et tempérer variabilité due au TCL
p = p + geom_point(size = 0.1, show.legend = legd)+ geom_smooth(show.legend = legd)
}
print(p)
}
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.het.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$Fst.s1.adm, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384, mat_1024_16384$Generation,
mat_1024_16384$mean.adm.props, mat_1024_16384$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$Fst.s1.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
plot_stat_gen(mat_1024_16384_mean, mat_1024_16384_mean$Generation,
mat_1024_16384_mean$mean.het.adm, mat_1024_16384_mean$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales")
#plot_stat_gen(mat_64_8192, mat_64_8192$gen,
#              mat_64_8192$mean.adm.props, mat_64_8192$Ne,
#              "Stat en fonction des générations\n selon différentes Ne initiales", #TRUE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$Fst.s1.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
legd = FALSE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$mean.het.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
legd = FALSE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$f3, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
legd = FALSE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$mean.het.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
legd = FALSE)
setwd("../new_methis_pop_increase_50000_snp/")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documents/git_repository/Stage/Simulations/new_methis_pop_size_diff_50000_snp/")
setwd("../new_methis_pop_increase_50000_snp/")
seq_ne_ini = seq(50,50,2)
seq_ne_fin = seq(100, 2400, 200)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(unlist(seq_combFALSEi))[[1]]
setwd("../new_methis_pop_increase_50000_snp/")
seq_ne_ini = seq(50,50,2)
seq_ne_fin = seq(100, 2400, 200)
seq_combi = as.data.frame(outer(seq_ne_ini, seq_ne_fin, FUN="paste", sep="-"))
seq_combi = as.data.frame.vector(unlist(seq_combi))[[1]]
for (ne_ini in seq_ne_ini) {
dir_ne = str_c("Ne", ne_ini, "-XXX/")
setwd(dir_ne)
motif_detect = str_c("^",ne_ini,"-")
vec_ne_tmp = seq_combi[which(str_detect(seq_combi, motif_detect))]
mat_tmp = data.frame.stat(seq_ne = vec_ne_tmp, max_gen = 101, max_simu = 1)
if (ne_ini == seq_ne_ini[1]) {
mat_pop_inc = mat_tmp
}else{
mat_pop_inc = rbind(mat_pop_inc, mat_tmp)
}
setwd("../")
}
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$f3, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
legd = TRUE)
plot_stat_gen(mat_pop_inc, mat_pop_inc$Generation,
mat_pop_inc$mean.het.adm, mat_pop_inc$Ne,
"Stat en fonction des générations\n selon différentes Ne initiales",
legd = TRUE)
